IMPLEMENTATION OF MATRIX CHAIN MULTIPLICATION

package Lab11;

import java.util.Scanner;

public class MatrixChainMultiplication {
    
    static int matrixChainOrder(int[] p) {
        int n = p.length;
        int[][] m = new int[n][n];
        
        // Cost is zero when multiplying one matrix
        for (int i = 1; i < n; i++) {
            m[i][i] = 0;
        }
        
        // L is chain length
        for (int L = 2; L < n; L++) {
            for (int i = 1; i < n - L + 1; i++) {
                int j = i + L - 1;
                m[i][j] = Integer.MAX_VALUE;
                for (int k = i; k <= j - 1; k++) {
                    int q = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];
                    if (q < m[i][j]) {
                        m[i][j] = q;
                    }
                }
            }
        }
        
        return m[1][n - 1];
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Enter total number of matrices: ");
        int numMatrices = scanner.nextInt();
        
        int[] dimensions = new int[numMatrices + 1];
        System.out.println("Enter the dimensions of each matrix (separated by spaces): ");
        for (int i = 0; i <= numMatrices; i++) {
            dimensions[i] = scanner.nextInt();
        }
        
        int minOperations = matrixChainOrder(dimensions);
        System.out.println("Minimum scalar multiplications: " + minOperations);
        
        scanner.close();
    }
}

